{"version":3,"sources":["NewTodoForm.js","Todo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["NewTodoForm","props","state","newTodo","handleSubmit","bind","handleChange","evt","preventDefault","theTodo","id","uuidv4","task","this","isCompleted","addItem","setState","target","name","value","className","onSubmit","htmlFor","onChange","placeholder","Component","Todo","editedTodo","isEditing","handleRemove","handleEdit","handleComplete","editTodo","removeTodo","completeTodo","editForm","completedTask","onClick","TodoList","todos","toggleCompleteTodo","json","localStorage","getItem","allTodos","JSON","parse","setItem","stringify","oldState","uniqueId","newTodos","filter","aTodo","editedTodos","map","completedTodos","emptyList","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95bf62d5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './NewTodoForm.css';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nclass NewTodoForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewTodo: ''\n\t\t};\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\thandleSubmit(evt) {\n\t\tevt.preventDefault();\n\t\tconst theTodo = {\n\t\t\tid: uuidv4(), \n\t\t\ttask: this.state.newTodo,\n\t\t\tisCompleted: false\n\t\t}\n\t\tthis.props.addItem(theTodo);\n\t\tthis.setState({ newTodo: '' });\n\t}\n\thandleChange(evt) {\n\t\tthis.setState({\n\t\t\t[evt.target.name]: evt.target.value\n\t\t});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<form className='NewTodoForm' onSubmit={this.handleSubmit}>\n\t\t\t\t<label htmlFor='new-todo' />\n\t\t\t\t<input id='new-todo' name='newTodo' value={this.state.newTodo} onChange={this.handleChange} placeholder='Add to the Todo List' />\n\t\t\t\t<button>add todo</button>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default NewTodoForm;\n","import React, { Component } from 'react';\nimport './Todo.css';\n\nclass Todo extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\teditedTodo: this.props.task,\n\t\t\tisCompleted: false,\n\t\t\tisEditing: false\n\t\t};\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleRemove = this.handleRemove.bind(this);\n\t\tthis.handleEdit = this.handleEdit.bind(this);\n\t\tthis.handleComplete = this.handleComplete.bind(this);\n\t}\n\thandleSubmit(evt) {\n\t\tevt.preventDefault();\n\t\tthis.props.editTodo(this.props.id, {\n\t\t\tid: this.props.id,\n\t\t\ttask: this.state.editedTodo\n\t\t});\n\t\tthis.setState({ isEditing: false });\n\t}\n\thandleChange(evt) {\n\t\tthis.setState({\n\t\t\t[evt.target.name]: evt.target.value\n\t\t});\n\t}\n\thandleRemove() {\n\t\tthis.props.removeTodo(this.props.id);\n\t}\n\thandleEdit() {\n\t\tthis.setState({ isEditing: true });\n\t}\n\thandleComplete() {\n\t\tthis.props.completeTodo(this.props.id);\n\t}\n\trender() {\n\t\tconst editForm = (\n\t\t\t<form className='Todo=edit' onSubmit={this.handleSubmit}>\n\t\t\t\t<input id='editForm' name='editedTodo' value={this.state.editedTodo} onChange={this.handleChange} />\n\t\t\t\t<button>Save</button>\n\t\t\t</form>\n\t\t);\n\t\tconst completedTask = this.props.isCompleted ? 'done' : '';\n\t\treturn (\n\t\t\t<div className='Todo'>\n\t\t\t\t{this.state.isEditing ? (\n\t\t\t\t\teditForm\n\t\t\t\t) : (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<div className={`Todo-task ${completedTask}`} onClick={this.handleComplete}>{this.props.task}</div>\n\t\t\t\t\t\t<div className='Todo-actions'>\n\t\t\t\t\t\t\t<i className='medium material-icons' onClick={this.handleComplete}>\n\t\t\t\t\t\t\t\t{this.props.isCompleted ? 'check_box' : 'check_box_outline_blank'}\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t<i className='medium material-icons' onClick={this.handleEdit}>\n\t\t\t\t\t\t\t\tmode_edit\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t<i className='medium material-icons' onClick={this.handleRemove}>\n\t\t\t\t\t\t\t\tdelete\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Todo;\n","import React, { Component } from 'react';\nimport './TodoList.css';\n\nimport NewTodoForm from './NewTodoForm';\nimport Todo from './Todo';\n\nclass TodoList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttodos: []\n\t\t};\n\t\tthis.addItem = this.addItem.bind(this);\n\t\tthis.removeTodo = this.removeTodo.bind(this);\n\t\tthis.editTodo = this.editTodo.bind(this);\n\t\tthis.toggleCompleteTodo = this.toggleCompleteTodo.bind(this);\n    }\n    componentDidMount() {\n        const json = localStorage.getItem('allTodos');\n        const allTodos = JSON.parse(json === null ? '[]' : json);\n        this.setState({ todos: allTodos });\n    }\n    componentDidUpdate() {\n        localStorage.setItem('allTodos', JSON.stringify(this.state.todos));\n    }\n\taddItem(newTodo) {\n\t\tthis.setState(oldState => {\n\t\t\treturn { todos: [ ...oldState.todos, newTodo ] };\n\t\t});\n\t}\n\tremoveTodo(uniqueId) {\n\t\tconst newTodos = this.state.todos.filter(aTodo => {\n\t\t\treturn aTodo.id !== uniqueId;\n\t\t});\n\t\tthis.setState({ todos: newTodos });\n\t}\n\teditTodo(uniqueId, newTodo) {\n\t\tconst editedTodos = this.state.todos.map(aTodo => {\n\t\t\tif (aTodo.id === uniqueId) {\n\t\t\t\treturn newTodo;\n\t\t\t}\n\t\t\treturn aTodo;\n\t\t});\n\t\tthis.setState({ todos: editedTodos });\n\t}\n\ttoggleCompleteTodo(uniqueId) {\n\t\tconst completedTodos = this.state.todos.map(aTodo => {\n\t\t\tif (aTodo.id === uniqueId) {\n\t\t\t\treturn { ...aTodo, isCompleted: !aTodo.isCompleted };\n\t\t\t}\n\t\t\treturn aTodo;\n\t\t});\n\t\tthis.setState({ todos: completedTodos });\n\t}\n\trender() {\n\t\tconst allTodos = this.state.todos.map(aTodo => {\n\t\t\treturn (\n\t\t\t\t<Todo\n\t\t\t\t\tkey={aTodo.id}\n\t\t\t\t\tid={aTodo.id}\n                    task={aTodo.task}\n                    isCompleted={aTodo.isCompleted}\n\t\t\t\t\tremoveTodo={this.removeTodo}\n\t\t\t\t\teditTodo={this.editTodo}\n\t\t\t\t\tcompleteTodo={this.toggleCompleteTodo}\n\t\t\t\t/>\n\t\t\t);\n        });\n        const emptyList = <p>There are no running Todos at hand</p>\n\t\treturn (\n\t\t\t<div className='TodoList'>\n\t\t\t\t<h1>\n\t\t\t\t\tTodo List\n\t\t\t\t\t<span>Get things done, don't miss anything</span>\n\t\t\t\t</h1>\n\t\t\t\t<div className='TodoList-todos'> {this.state.todos.length === 0 ? emptyList : allTodos} </div>\n\t\t\t\t<NewTodoForm addItem={this.addItem} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport TodoList from './TodoList';\n\nclass App extends Component {\n  render() {\n    return(\n      <div className='App'>\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}